---
import { languages } from '../i18n/ui';
---

<div id="language-picker">
  <button id="language-button" tabindex="-1">
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2zm7.931 9h-2.764a14.67 14.67 0 0 0-1.792-6.243A8.013 8.013 0 0 1 19.931 11zM12.53 4.027c1.035 1.364 2.427 3.78 2.627 6.973H9.03c.139-2.596.994-5.028 2.451-6.974.172-.01.344-.026.519-.026.179 0 .354.016.53.027zm-3.842.7C7.704 6.618 7.136 8.762 7.03 11H4.069a8.013 8.013 0 0 1 4.619-6.273zM4.069 13h2.974c.136 2.379.665 4.478 1.556 6.23A8.01 8.01 0 0 1 4.069 13zm7.381 6.973C10.049 18.275 9.222 15.896 9.041 13h6.113c-.208 2.773-1.117 5.196-2.603 6.972-.182.012-.364.028-.551.028-.186 0-.367-.016-.55-.027zm4.011-.772c.955-1.794 1.538-3.901 1.691-6.201h2.778a8.005 8.005 0 0 1-4.469 6.201z"></path></svg>
  </button>
  <div id="language-dropdown-parent">
    <ul id="language-dropdown">
      {Object.entries(languages).map(([lang, label]) => (
        <li>
          <a href={`/${lang}/`} class="language-link">{label}</a>
        </li>
      ))}
    </ul>
  </div>
</div>

<style>
  #language-picker {
    position: fixed;
    bottom: 16px;
    left: 16px;
    z-index: 10;
  }

  #language-button {
    position: fixed;
    bottom: 16px;
    left: 16px;
    z-index: 10;
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: var(--secondary);
    padding: 12px;
    border: none;
    border-radius: 50%;
    cursor: pointer;
    transition: 0.3s ease;
  }

  #language-button svg {
    width: 32px;
    height: 32px;
    fill: white;
  }

  #language-dropdown-parent {
    position: absolute;
    z-index: -1;
    bottom: 0;
    left: 0;
    padding: 2px 8px 2px 28px;
    background-color: var(--secondary);
    opacity: 0;
    pointer-events: none;
    border-radius: 8px;
    transition: 0.3s ease;
  }

  #language-dropdown {
    margin: 0;
    list-style: none;
  }

  #language-picker:hover #language-dropdown-parent,
  #language-picker.focused #language-dropdown-parent {
    opacity: 1;
    pointer-events: auto;
  }

  #language-dropdown li {
    margin-top: 8px;
    margin-bottom: 8px;
  }

  .language-link {
    text-decoration: none;
    color: var(--text);
    padding: 0.5rem 1rem;
    display: block;
    border-radius: 5px;
    transition: 0.3s ease;
  }

  .language-link:hover {
    background-color: var(--primary);
    box-shadow: 0 0 8px var(--primary), 0 0 16px var(--primary);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const picker = document.getElementById('language-picker');
    const links = picker.querySelectorAll('.language-link');

    links.forEach((link, index) => {
      link.addEventListener('focus', () => {
        picker.classList.add('focused');
      });

      link.addEventListener('blur', (event: FocusEvent) => {
        const relatedTarget = event.relatedTarget as Node;
        if (!picker.contains(relatedTarget)) {
          picker.classList.remove('focused');
        }
      });
    });
  });
</script>
