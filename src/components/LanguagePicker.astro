---
import { languages } from '../i18n/ui';
---

<div class="language-picker">
  <button class="language-button" id="language-button">
    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24"><path d="M12 2C6.486 2 2 6.486 2 12s4.486 10 10 10 10-4.486 10-10S17.514 2 12 2zm7.931 9h-2.764a14.67 14.67 0 0 0-1.792-6.243A8.013 8.013 0 0 1 19.931 11zM12.53 4.027c1.035 1.364 2.427 3.78 2.627 6.973H9.03c.139-2.596.994-5.028 2.451-6.974.172-.01.344-.026.519-.026.179 0 .354.016.53.027zm-3.842.7C7.704 6.618 7.136 8.762 7.03 11H4.069a8.013 8.013 0 0 1 4.619-6.273zM4.069 13h2.974c.136 2.379.665 4.478 1.556 6.23A8.01 8.01 0 0 1 4.069 13zm7.381 6.973C10.049 18.275 9.222 15.896 9.041 13h6.113c-.208 2.773-1.117 5.196-2.603 6.972-.182.012-.364.028-.551.028-.186 0-.367-.016-.55-.027zm4.011-.772c.955-1.794 1.538-3.901 1.691-6.201h2.778a8.005 8.005 0 0 1-4.469 6.201z"></path></svg>
  </button>
  <ul class="language-dropdown" id="language-dropdown" hidden>
    {Object.entries(languages).map(([lang, label]) => (
      <li>
        <a href={`/${lang}/`} class="language-link">{label}</a>
      </li>
    ))}
  </ul>
</div>

<style>
  .language-picker {
    position: fixed;
    bottom: 16px;
    left: 16px;
    z-index: 1000;
  }

  .language-button {
    background-color: var(--secondary);
    border: none;
    padding: 12px;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: 0.3s ease;
  }

  .language-button:hover {
    transform: scale(1.05);
    background-color: var(--primary);
    box-shadow: 0 0 8px var(--primary), 0 0 16px var(--primary);
  }

  .language-button svg {
    width: 32px;
    height: 32px;
    fill: white;
  }

  .language-dropdown {
    list-style: none;
    margin: 0;
    padding: 0.5rem;
    background-color: var(--secondary);
    border-radius: 8px;
    box-shadow: 0px 8px 16px rgba(0, 0, 0, 0.2);
    position: absolute;
    bottom: 4rem; /* Posun nad tlačítko */
    left: 0;
    opacity: 0;
    transform: translateY(10px);
    transition: opacity 0.2s ease-in-out, transform 0.2s ease-in-out;
    display: none;
  }

  .language-dropdown[hidden] {
    display: none;
  }

  .language-dropdown:not([hidden]) {
    display: block;
    opacity: 1;
    transform: translateY(0);
  }

  .language-link {
    text-decoration: none;
    color: var(--text);
    padding: 0.5rem 1rem;
    display: block;
    border-radius: 5px;
    transition: 0.3s ease;
  }

  .language-link:hover {
    text-decoration: underline;
    color: var(--primary);
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const button = document.getElementById('language-button');
    const dropdown = document.getElementById('language-dropdown');

    button.addEventListener('click', () => {
      const isHidden = dropdown.hasAttribute('hidden');
      if (isHidden) {
        dropdown.removeAttribute('hidden');
      } else {
        dropdown.setAttribute('hidden', 'true');
      }
    });

    // Zavře dropdown, pokud uživatel klikne mimo něj
    document.addEventListener('click', (event) => {
      if (!button.contains(event.target) && !dropdown.contains(event.target)) {
        dropdown.setAttribute('hidden', 'true');
      }
    });
  });
</script>
